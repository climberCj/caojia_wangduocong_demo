<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.caojiawangduocongdemo.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.caojiawangduocongdemo.entity.Student" >
    <id column="sysid" property="sysid" jdbcType="VARCHAR" />
    <result column="studentId" property="studentid" jdbcType="VARCHAR" />
    <result column="studentName" property="studentname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="INTEGER" />
    <result column="sclass" property="sclass" jdbcType="VARCHAR" />
    <result column="teacherId" property="teacherid" jdbcType="VARCHAR" />
    <result column="stuStatus" property="stustatus" jdbcType="VARCHAR" />
    <result column="stuPic" property="stupic" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    sysid, studentId, studentName, password, result, sclass, teacherId, stuStatus, stuPic
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where sysid = #{sysid,jdbcType=VARCHAR}
  </select>
  <select id="findByStudentId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where studentId = #{studentid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where sysid = #{sysid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.caojiawangduocongdemo.entity.Student" >
    insert into student (sysid, studentId, studentName, 
      password, result, sclass, 
      teacherId, stuStatus, stuPic
      )
    values (#{sysid,jdbcType=VARCHAR}, #{studentid,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{result,jdbcType=INTEGER}, #{sclass,jdbcType=VARCHAR}, 
      #{teacherid,jdbcType=VARCHAR}, #{stustatus,jdbcType=VARCHAR}, #{stupic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.caojiawangduocongdemo.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sysid != null" >
        sysid,
      </if>
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="studentname != null" >
        studentName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="sclass != null" >
        sclass,
      </if>
      <if test="teacherid != null" >
        teacherId,
      </if>
      <if test="stustatus != null" >
        stuStatus,
      </if>
      <if test="stupic != null" >
        stuPic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sysid != null" >
        #{sysid,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=INTEGER},
      </if>
      <if test="sclass != null" >
        #{sclass,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="stustatus != null" >
        #{stustatus,jdbcType=VARCHAR},
      </if>
      <if test="stupic != null" >
        #{stupic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.caojiawangduocongdemo.entity.Student" >
    update student
    <set >
      <if test="studentid != null" >
        studentId = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null" >
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="sclass != null" >
        sclass = #{sclass,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        teacherId = #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="stustatus != null" >
        stuStatus = #{stustatus,jdbcType=VARCHAR},
      </if>
      <if test="stupic != null" >
        stuPic = #{stupic,jdbcType=VARCHAR},
      </if>
    </set>
    where sysid = #{sysid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.caojiawangduocongdemo.entity.Student" >
    update student
    set studentId = #{studentid,jdbcType=VARCHAR},
      studentName = #{studentname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      sclass = #{sclass,jdbcType=VARCHAR},
      teacherId = #{teacherid,jdbcType=VARCHAR},
      stuStatus = #{stustatus,jdbcType=VARCHAR},
      stuPic = #{stupic,jdbcType=VARCHAR}
    where sysid = #{sysid,jdbcType=VARCHAR}
  </update>
  <select id="count" resultType="long">
    select count(1) from student where 1=1
    <if test="q != null">
      AND (name like '%${q}%' or id like '%${q}%')
    </if>
    <if test="status != null and status !=0">
      AND status = #{status}
    </if>
  </select>
  <select id="page" resultMap="BaseResultMap">
    SELECT sysid, studentId, status, studentName, password, result,sclass,teacherId,stupic FROM student
    where 1=1
    <if test="q != null">
      AND (studentName like '%${q}%' or studentId like '%${q}%'  )
    </if>
    <if test="status != null and status !=0">
      AND status = #{status}
    </if>
    order by result desc limit #{pageSize} offset #{start}
  </select>
</mapper>